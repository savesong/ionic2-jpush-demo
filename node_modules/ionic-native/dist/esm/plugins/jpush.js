var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Plugin, Cordova } from './plugin';
/**
 * @name JPush
 * @description
 * This plugin does something
 *
 * @usage
 * ```
 * import { JPush } from 'ionic-native';
 *
 * JPush.functionName('Hello', 123)
 *   .then((something: any) => doSomething(something))
 *   .catch((error: any) => console.log(error));
 *
 * ```
 */
export var JPush = (function () {
    function JPush() {
    }
    // android && iOS
    JPush.init = function () { return; };
    // android && iOS
    JPush.stopPush = function () { return; };
    // android && iOS
    JPush.resumePush = function () { return; };
    // android && iOS
    JPush.isPushStopped = function () { return; };
    // android && iOS
    JPush.getRegistrationID = function () { return; };
    // android && iOS
    JPush.setTagsWithAlias = function (tags, alias) { return; };
    // android && iOS
    JPush.setTags = function (tags) { return; };
    // android && iOS
    JPush.setAlias = function (alias) { return; };
    // android && iOS
    JPush.getUserNotificationSettings = function () { return; };
    // iOS
    JPush.startJPushSDK = function () { return; };
    // iOS
    JPush.setBadge = function (value) { return; };
    // iOS
    JPush.resetBadge = function () { return; };
    // iOS
    JPush.setApplicationIconBadgeNumber = function (badge) { return; };
    // iOS
    JPush.getApplicationIconBadgeNumber = function () { return; };
    // iOS
    JPush.addLocalNotificationForIOS = function (delayTime, content, badge, notificationID, extras) { return; };
    // iOS
    JPush.deleteLocalNotificationWithIdentifierKeyInIOS = function (identifierKey) { return; };
    // iOS
    JPush.clearAllLocalNotifications = function () { return; };
    // iOS
    JPush.startLogPageView = function (pageName) { return; };
    // iOS
    JPush.stopLogPageView = function (pageName) { return; };
    // iOS
    JPush.beginLogPageView = function (pageName, duration) { return; };
    // iOS
    JPush.setDebugModeFromIos = function () { return; };
    // iOS
    JPush.setLogOFF = function () { return; };
    // iOS
    JPush.setCrashLogON = function () { return; };
    // iOS
    JPush.setLocation = function (latitude, longitude) { return; };
    // iOS
    JPush.isPlatformIOS = function () { return; };
    // iOS
    JPush.addDismissActions = function (actions, categoryId) { return; };
    // iOS
    JPush.addNotificationActions = function (actions, categoryId) { return; };
    // android
    JPush.setDebugMode = function (mode) { return; };
    // android
    JPush.receiveMessageInAndroidCallback = function (data) { return; };
    // android
    JPush.openNotificationInAndroidCallback = function (data) { return; };
    // android
    JPush.setStatisticsOpen = function (bool) { return; };
    // android
    JPush.reportNotificationOpened = function (msgID) { return; };
    // android
    JPush.clearAllNotification = function () { return; };
    // android
    JPush.clearNotificationById = function (notificationId) { return; };
    // android
    JPush.setPushTime = function (days, startHour, endHour) { return; };
    // android
    JPush.setSilenceTime = function (startHour, startMinute, endHour, endMinute) { return; };
    // android
    JPush.setLatestNotificationNum = function (num) { return; };
    // android
    JPush.addLocalNotification = function (builderId, content, title, notificaitonID, broadcastTime, extras) { return; };
    // android
    JPush.removeLocalNotification = function (notificationID) { return; };
    // android
    JPush.clearLocalNotifications = function () { return; };
    __decorate([
        Cordova()
    ], JPush, "init", null);
    __decorate([
        Cordova()
    ], JPush, "stopPush", null);
    __decorate([
        Cordova()
    ], JPush, "resumePush", null);
    __decorate([
        Cordova()
    ], JPush, "isPushStopped", null);
    __decorate([
        Cordova()
    ], JPush, "getRegistrationID", null);
    __decorate([
        Cordova()
    ], JPush, "setTagsWithAlias", null);
    __decorate([
        Cordova()
    ], JPush, "setTags", null);
    __decorate([
        Cordova()
    ], JPush, "setAlias", null);
    __decorate([
        Cordova()
    ], JPush, "getUserNotificationSettings", null);
    __decorate([
        Cordova()
    ], JPush, "startJPushSDK", null);
    __decorate([
        Cordova()
    ], JPush, "setBadge", null);
    __decorate([
        Cordova()
    ], JPush, "resetBadge", null);
    __decorate([
        Cordova()
    ], JPush, "setApplicationIconBadgeNumber", null);
    __decorate([
        Cordova()
    ], JPush, "getApplicationIconBadgeNumber", null);
    __decorate([
        Cordova()
    ], JPush, "addLocalNotificationForIOS", null);
    __decorate([
        Cordova()
    ], JPush, "deleteLocalNotificationWithIdentifierKeyInIOS", null);
    __decorate([
        Cordova()
    ], JPush, "clearAllLocalNotifications", null);
    __decorate([
        Cordova()
    ], JPush, "startLogPageView", null);
    __decorate([
        Cordova()
    ], JPush, "stopLogPageView", null);
    __decorate([
        Cordova()
    ], JPush, "beginLogPageView", null);
    __decorate([
        Cordova()
    ], JPush, "setDebugModeFromIos", null);
    __decorate([
        Cordova()
    ], JPush, "setLogOFF", null);
    __decorate([
        Cordova()
    ], JPush, "setCrashLogON", null);
    __decorate([
        Cordova()
    ], JPush, "setLocation", null);
    __decorate([
        Cordova()
    ], JPush, "isPlatformIOS", null);
    __decorate([
        Cordova()
    ], JPush, "addDismissActions", null);
    __decorate([
        Cordova()
    ], JPush, "addNotificationActions", null);
    __decorate([
        Cordova()
    ], JPush, "setDebugMode", null);
    __decorate([
        Cordova()
    ], JPush, "receiveMessageInAndroidCallback", null);
    __decorate([
        Cordova()
    ], JPush, "openNotificationInAndroidCallback", null);
    __decorate([
        Cordova()
    ], JPush, "setStatisticsOpen", null);
    __decorate([
        Cordova()
    ], JPush, "reportNotificationOpened", null);
    __decorate([
        Cordova()
    ], JPush, "clearAllNotification", null);
    __decorate([
        Cordova()
    ], JPush, "clearNotificationById", null);
    __decorate([
        Cordova()
    ], JPush, "setPushTime", null);
    __decorate([
        Cordova()
    ], JPush, "setSilenceTime", null);
    __decorate([
        Cordova()
    ], JPush, "setLatestNotificationNum", null);
    __decorate([
        Cordova()
    ], JPush, "addLocalNotification", null);
    __decorate([
        Cordova()
    ], JPush, "removeLocalNotification", null);
    __decorate([
        Cordova()
    ], JPush, "clearLocalNotifications", null);
    JPush = __decorate([
        Plugin({
            pluginName: 'JPush',
            plugin: 'jpush-phonegap-plugin',
            pluginRef: 'plugins.jPushPlugin',
            repo: 'https://github.com/jpush/jpush-phonegap-plugin',
            platforms: ['Android', 'iOS']
        })
    ], JPush);
    return JPush;
}());
//# sourceMappingURL=jpush.js.map